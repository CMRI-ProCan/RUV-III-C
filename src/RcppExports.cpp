// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// RUVIIIC_CPP
Rcpp::RObject RUVIIIC_CPP(Rcpp::NumericMatrix Y, int k, Rcpp::NumericMatrix M, Rcpp::CharacterVector controls, Rcpp::CharacterVector toCorrect, bool withExtra, bool withW, bool withAlpha, bool progress);
RcppExport SEXP _RUVIIIC_RUVIIIC_CPP(SEXP YSEXP, SEXP kSEXP, SEXP MSEXP, SEXP controlsSEXP, SEXP toCorrectSEXP, SEXP withExtraSEXP, SEXP withWSEXP, SEXP withAlphaSEXP, SEXP progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type M(MSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type controls(controlsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type toCorrect(toCorrectSEXP);
    Rcpp::traits::input_parameter< bool >::type withExtra(withExtraSEXP);
    Rcpp::traits::input_parameter< bool >::type withW(withWSEXP);
    Rcpp::traits::input_parameter< bool >::type withAlpha(withAlphaSEXP);
    Rcpp::traits::input_parameter< bool >::type progress(progressSEXP);
    rcpp_result_gen = Rcpp::wrap(RUVIIIC_CPP(Y, k, M, controls, toCorrect, withExtra, withW, withAlpha, progress));
    return rcpp_result_gen;
END_RCPP
}
// RUVIIIC_Varying_CPP
Rcpp::RObject RUVIIIC_Varying_CPP(Rcpp::NumericMatrix Y, int k, Rcpp::NumericMatrix M, Rcpp::CharacterVector potentialControls, Rcpp::CharacterVector toCorrect, bool withExtra, bool withW, bool withAlpha, bool progress);
RcppExport SEXP _RUVIIIC_RUVIIIC_Varying_CPP(SEXP YSEXP, SEXP kSEXP, SEXP MSEXP, SEXP potentialControlsSEXP, SEXP toCorrectSEXP, SEXP withExtraSEXP, SEXP withWSEXP, SEXP withAlphaSEXP, SEXP progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type M(MSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type potentialControls(potentialControlsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type toCorrect(toCorrectSEXP);
    Rcpp::traits::input_parameter< bool >::type withExtra(withExtraSEXP);
    Rcpp::traits::input_parameter< bool >::type withW(withWSEXP);
    Rcpp::traits::input_parameter< bool >::type withAlpha(withAlphaSEXP);
    Rcpp::traits::input_parameter< bool >::type progress(progressSEXP);
    rcpp_result_gen = Rcpp::wrap(RUVIIIC_Varying_CPP(Y, k, M, potentialControls, toCorrect, withExtra, withW, withAlpha, progress));
    return rcpp_result_gen;
END_RCPP
}
// RUVIIIC_omp_set_num_threads
SEXP RUVIIIC_omp_set_num_threads(SEXP num);
RcppExport SEXP _RUVIIIC_RUVIIIC_omp_set_num_threads(SEXP numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type num(numSEXP);
    rcpp_result_gen = Rcpp::wrap(RUVIIIC_omp_set_num_threads(num));
    return rcpp_result_gen;
END_RCPP
}
// RUVIIIC_omp_get_num_threads
SEXP RUVIIIC_omp_get_num_threads();
RcppExport SEXP _RUVIIIC_RUVIIIC_omp_get_num_threads() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RUVIIIC_omp_get_num_threads());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RUVIIIC_RUVIIIC_CPP", (DL_FUNC) &_RUVIIIC_RUVIIIC_CPP, 9},
    {"_RUVIIIC_RUVIIIC_Varying_CPP", (DL_FUNC) &_RUVIIIC_RUVIIIC_Varying_CPP, 9},
    {"_RUVIIIC_RUVIIIC_omp_set_num_threads", (DL_FUNC) &_RUVIIIC_RUVIIIC_omp_set_num_threads, 1},
    {"_RUVIIIC_RUVIIIC_omp_get_num_threads", (DL_FUNC) &_RUVIIIC_RUVIIIC_omp_get_num_threads, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_RUVIIIC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
